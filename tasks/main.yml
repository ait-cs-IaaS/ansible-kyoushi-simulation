---
# tasks file for kyoushi-simulation

# -------------------------------------------
# *** Install Requirements ***
# -------------------------------------------

- name: Add python repository
  ansible.builtin.apt_repository:
    repo: ppa:deadsnakes/ppa
  when: kyoushi_venv_python_version < 3.8
  become: yes

- name: Ensure python {{ kyoushi_venv_python_version }} and python-pip is installed
  package:
    name: 
      - "python{{ kyoushi_venv_python_version }}"
      - python3-pip
    update_cache: yes
  become: yes

- name: Ensure virtualenv is installed
  pip:
    name: virtualenv
    executable: pip3
  become: yes


# -------------------------------------------
# *** Setup kyoushi ***
# -------------------------------------------

- name: Ensure kyoushi base path exists
  ansible.builtin.file:
    path: "{{ kyoushi_base_path }}"
    owner: "{{ kyoushi_user_name | default(omit) }}"
    group: "{{ kyoushi_user_group | default(omit) }}"
    state: directory
  become: yes

- name: Ensure venv path exists
  ansible.builtin.file:
    path: "{{ kyoushi_venv_path }}"
    owner: "{{ kyoushi_user_name | default(omit) }}"
    group: "{{ kyoushi_user_group | default(omit) }}"
    state: directory
    recurse: yes
  become: yes

- name: Install kyoushi packages
  pip:
    name: "{{ item.name }}"
    version: "{{ item.version | default(omit) }}"
    extra_args: "--extra-index-url {{ kyoushi_simulation_package_index }} --extra-index-url {{ kyoushi_statemachines_package_index }}"
    virtualenv: "{{ kyoushi_venv_path }}"
    virtualenv_python: "python{{ kyoushi_venv_python_version }}"
    state: "{{ 'forcereinstall' if kyoushi_packages_reinstall else 'present' }}"
  loop: "{{ kyoushi_packages }}"
  become: yes
  become_user: "{{ kyoushi_user_name | default(omit) }}"

- name: Set group to venv
  ansible.builtin.file:
    path: "{{ kyoushi_venv_path }}"
    owner: "{{ kyoushi_user_name | default(omit) }}"
    group: "{{ kyoushi_user_group | default(omit) }}"
  become: yes


# -------------------------------------------
# *** Configure kyoushi ***
# -------------------------------------------

- name: Ensure state machine directory exists
  ansible.builtin.file:
    path: "{{ kyoushi_sim_config_path }}"
    owner: "{{ kyoushi_user_name | default(omit) }}"
    group: "{{ kyoushi_user_group | default(omit) }}"
    state: directory
  become: yes

- name: Ensure log directory exists
  ansible.builtin.file:
    path: "{{ kyoushi_log_file.path | dirname }}"
    owner: "{{ kyoushi_user_name | default(omit) }}"
    group: "{{ kyoushi_user_group | default(omit) }}"
    state: directory
    recurse: yes
  when: kyoushi_log_file.path is defined
  become: yes

- name: Deploy config files
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dst }}"
    owner: "{{ kyoushi_user_name | default(omit) }}"
    group: "{{ kyoushi_user_group | default(omit) }}"
  loop: "{{ kyoushi_config_files.values() | list }}"
  when: item.deploy | default(true)
  become: yes

- name: Deploy optional state machine python plugin
  ansible.builtin.copy:
    src: "{{ kyoushi_sm_python_plugin.src }}"
    dest: "{{ kyoushi_sm_python_plugin.dst }}"
    owner: "{{ kyoushi_user_name | default(omit) }}"
    group: "{{ kyoushi_user_group | default(omit) }}"
  when: kyoushi_sm_python_plugin is defined | default(false)
  become: yes


# -------------------------------------------
# *** Custom executable ***
# -------------------------------------------

- name: Ensure exec directory exists
  ansible.builtin.file:
    path: "{{ kyoushi_exec_path }}"
    owner: "{{ kyoushi_user_name | default(omit) }}"
    group: "{{ kyoushi_user_group | default(omit) }}"
    state: directory
  become: yes

- name: Deploy custom executable
  template:
    src: "{{ kyoushi_executable_template }}"
    dest: "{{ kyoushi_venv_path }}/{{ kyoushi_sm_effective_name }}.sh" # hardcoded 
    owner: "{{ kyoushi_user_name | default(omit) }}"
    group: "{{ kyoushi_user_group | default(omit) }}"
    mode: '0755'
  become: yes

- name: Create symlink to executable
  file:
    src: "{{ kyoushi_venv_path }}/{{ kyoushi_sm_effective_name }}.sh"
    dest: "/usr/local/bin/{{ kyoushi_sm_effective_name }}"
    state: link
    owner: "{{ kyoushi_user_name | default(omit) }}"
    group: "{{ kyoushi_user_group | default(omit) }}"
    mode: '0755'
    force: yes
  become: yes